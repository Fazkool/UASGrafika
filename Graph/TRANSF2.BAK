#ifndef TRANSF2_H
#define TRANSF2_H
typedef float Matrix3x3[3][3];

void matrix3x3SetIdentity (Matrix3x3 m)
{
	int i, j;
	for (i=0; i<3; i++) for (j=0; j<3; j ++ ) m[i][j] = (i == j);
}

void rotate2(float a,int x,int y,Matrix3x3 m){

	matrix3x3SetIdentity(m);
	float rad = PI * a / 180.0;
	//float rad = a;
	m[0][0] = cos(rad);
	m[0][1] = - sin(rad);
	m[0][2] = x * (1-cos(rad)) + y * sin(rad);
	m[1][0] = sin(rad);
	m[1][1] = cos(rad);
	m[1][2] = y * (1 - cos(rad)) - y * sin(rad);
       //	matrix3x3PreMultiply(m,theMatrix);
}

void scale2(float sx,float sy,int x,int y,Matrix3x3 m){
	matrix3x3SetIdentity(m);
	m[0][0] = sx;
	m[0][2] = (1-sx) * x;
	m[1][1] = sy;
	m[1][2] = (1-sy) * y;
}

void translate2(int tx,int ty,Matrix3x3 m){
	Matrix3x3SetIdentity(m);
	m[0][2] = tx;
	m[1][2] = ty;
}

void transformPoints2(Matrix3x3 m,int x1,int *x2,int y1,int *y2){
	int k;
	float tmp;
	tmp = m[0][0] * x1 + m[0][1] * y1 + m[0][2];
	*y2 =  m[1][0] * x1 + m[1][1] * y1 + m[1][2];
	*x2 = tmp;
}
#endif